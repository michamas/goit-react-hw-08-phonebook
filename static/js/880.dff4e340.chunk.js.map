{"version":3,"file":"static/js/880.dff4e340.chunk.js","mappings":"4MACA,EAA2B,2B,kBC4B3B,EAxBiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGJ,EAASK,KAAI,SAAAC,GAIZ,OACE,0BACGA,EAAQC,KAAK,KAAGD,EAAQE,QACzB,mBAAQC,KAAK,SAASC,QANJ,WACpBZ,GAASa,EAAAA,EAAAA,IAAcL,EAAQM,IAChC,EAIG,SAA8C,aAFvCN,EAAQM,GAOpB,OAIR,E,UC1BD,EAA0B,wB,SCIbC,EAAS,WACpB,IAAMf,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iCACE,wBAAI,cACJ,gBAAKI,UAAWC,EAAhB,UACE,kBAAOU,QAAQ,SAAf,UACE,kBACEC,YAAY,iBACZH,GAAG,SACHH,KAAK,SACLO,UAAUC,EAAAA,EAAAA,WAdC,SAAAC,GACnB,IAAMC,EAAQD,EAAEE,OAAOD,MAAME,cAC7BvB,GAASwB,EAAAA,EAAAA,GAAUH,GACpB,GAW0C,aAM5C,E,UCtBYI,EAAO,WAElB,IAAMvB,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBJ,GAAWC,EAAAA,EAAAA,MAoBjB,OACE,iCACE,wBAAI,eAEJ,kBAAMyB,SAtBW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAML,OACbb,EAAOoB,EAAKC,SAASrB,KAAKY,MAChC,GACEnB,EAAS6B,MACP,SAAAvB,GAAO,OAAIA,EAAQC,KAAKc,gBAAkBd,EAAKc,aAAxC,IAGTS,EAAAA,OAAAA,QAAA,eAAuBvB,EAAvB,qCACK,CACL,IAAMC,EAASmB,EAAKC,SAASpB,OAAOW,MACpCrB,GAASiC,EAAAA,EAAAA,IAAW,CAAExB,KAAAA,EAAMC,OAAAA,IAC7B,CAEDmB,EAAKK,OACN,EAMG,WACE,6BAAO,SAEL,kBACEvB,KAAK,OACLF,KAAK,OACL0B,aAAa,MACbC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,6BAAO,iBAEL,kBACE3B,KAAK,MACLF,KAAK,SACL2B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQ3B,KAAK,SAAb,SAAsB,qBAI7B,E,oBChDc,SAAS4B,IACtB,IAAQC,GAAcrC,EAAAA,EAAAA,IAAYC,EAAAA,IAA1BoC,UACFxC,GAAWC,EAAAA,EAAAA,MAKjB,OAHAwC,EAAAA,EAAAA,YAAU,WACRzC,GAAS0C,EAAAA,EAAAA,MACV,GAAE,CAAC1C,KAEF,iCACE,SAAC,KAAD,WACE,2BAAO,qBAET,iBAAKK,UAAU,MAAf,WACE,SAACoB,EAAD,KACA,SAACV,EAAD,IACCyB,IAAa,uBAAG,gBACjB,SAAC,EAAD,SAKP,C","sources":["webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/PhonebookPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__Eg+6p\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors.js';\nimport css from './Contacts.module.css';\nimport { deleteContact } from 'redux/operations.js';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  return (\n    <>\n      <ul className={css.contacts}>\n        {contacts.map(contact => {\n          const removeContact = () => {\n            dispatch(deleteContact(contact.id));\n          };\n          return (\n            <li key={contact.id}>\n              {contact.name}: {contact.number}\n              <button type=\"button\" onClick={removeContact}>\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice.js';\nimport css from './Filter.module.css';\nimport { debounce } from 'lodash';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <div className={css.wrapper}>\n        <label htmlFor=\"filter\">\n          <input\n            placeholder=\"search by name\"\n            id=\"filter\"\n            type=\"search\"\n            onChange={debounce(handleFilter, 500)}\n          />\n        </label>\n      </div>\n    </>\n  );\n};\n","import { Notify } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations.js';\nimport { selectContacts } from 'redux/selectors.js';\n\nexport const Form = () => {\n  //REDUX\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notify.failure(`Hey, ${name} is already in the phonebook`);\n    } else {\n      const number = form.elements.number.value;\n      dispatch(addContact({ name, number }));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Phone number:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </>\n  );\n};\n","import Contacts from 'components/Contacts/Contacts.jsx';\nimport { Filter } from 'components/Filter/Filter.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from 'components/Form/Form.jsx';\nimport { selectContacts } from 'redux/selectors.js';\nimport { Helmet } from 'react-helmet-async';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations.js';\n// import { Helmet } from 'react-helmet-async';\n\nexport default function PhonebookPage() {\n  const { isLoading } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Helmet>\n        <title>YOUR CONTATCS</title>\n      </Helmet>\n      <div className=\"app\">\n        <Form />\n        <Filter />\n        {isLoading && <p>Loading...</p>}\n        <Contacts />\n        {/* <ContactList /> */}\n      </div>\n    </>\n  );\n}\n"],"names":["dispatch","useDispatch","contacts","useSelector","selectContacts","className","css","map","contact","name","number","type","onClick","deleteContact","id","Filter","htmlFor","placeholder","onChange","debounce","e","value","target","toLowerCase","setFilter","Form","onSubmit","event","preventDefault","form","elements","some","Notify","addContact","reset","autoComplete","pattern","title","required","PhonebookPage","isLoading","useEffect","fetchContacts"],"sourceRoot":""}